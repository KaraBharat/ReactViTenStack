/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as publicPublicImport } from './routes/(public)/_public'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as appDashboardImport } from './routes/(app)/dashboard'
import { Route as publicPublicIndexImport } from './routes/(public)/_public/index'
import { Route as appDashboardIndexImport } from './routes/(app)/dashboard/index'
import { Route as publicPublicFeaturesImport } from './routes/(public)/_public/features'
import { Route as publicPublicDocsImport } from './routes/(public)/_public/docs'
import { Route as appDashboardTodosImport } from './routes/(app)/dashboard/todos'
import { Route as appDashboardSettingsImport } from './routes/(app)/dashboard/settings'
import { Route as appDashboardTodosIndexImport } from './routes/(app)/dashboard/todos/index'
import { Route as appDashboardSettingsIndexImport } from './routes/(app)/dashboard/settings/index'
import { Route as appDashboardTodosNewImport } from './routes/(app)/dashboard/todos/new'
import { Route as appDashboardSettingsUserProfileImport } from './routes/(app)/dashboard/settings/user-profile'
import { Route as appDashboardSettingsChangePasswordImport } from './routes/(app)/dashboard/settings/change-password'
import { Route as appDashboardTodosEditIdImport } from './routes/(app)/dashboard/todos/edit/$id'
import { Route as appDashboardTodosDetailIdImport } from './routes/(app)/dashboard/todos/detail/$id'

// Create Virtual Routes

const publicImport = createFileRoute('/(public)')()

// Create/Update Routes

const publicRoute = publicImport.update({
  id: '/(public)',
  getParentRoute: () => rootRoute,
} as any)

const publicPublicRoute = publicPublicImport.update({
  id: '/_public',
  getParentRoute: () => publicRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardRoute = appDashboardImport.update({
  id: '/(app)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const publicPublicIndexRoute = publicPublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicPublicRoute,
} as any)

const appDashboardIndexRoute = appDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appDashboardRoute,
} as any)

const publicPublicFeaturesRoute = publicPublicFeaturesImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => publicPublicRoute,
} as any)

const publicPublicDocsRoute = publicPublicDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => publicPublicRoute,
} as any)

const appDashboardTodosRoute = appDashboardTodosImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => appDashboardRoute,
} as any)

const appDashboardSettingsRoute = appDashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appDashboardRoute,
} as any)

const appDashboardTodosIndexRoute = appDashboardTodosIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appDashboardTodosRoute,
} as any)

const appDashboardSettingsIndexRoute = appDashboardSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appDashboardSettingsRoute,
} as any)

const appDashboardTodosNewRoute = appDashboardTodosNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => appDashboardTodosRoute,
} as any)

const appDashboardSettingsUserProfileRoute =
  appDashboardSettingsUserProfileImport.update({
    id: '/user-profile',
    path: '/user-profile',
    getParentRoute: () => appDashboardSettingsRoute,
  } as any)

const appDashboardSettingsChangePasswordRoute =
  appDashboardSettingsChangePasswordImport.update({
    id: '/change-password',
    path: '/change-password',
    getParentRoute: () => appDashboardSettingsRoute,
  } as any)

const appDashboardTodosEditIdRoute = appDashboardTodosEditIdImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => appDashboardTodosRoute,
} as any)

const appDashboardTodosDetailIdRoute = appDashboardTodosDetailIdImport.update({
  id: '/detail/$id',
  path: '/detail/$id',
  getParentRoute: () => appDashboardTodosRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicImport
      parentRoute: typeof rootRoute
    }
    '/(public)/_public': {
      id: '/(public)/_public'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicPublicImport
      parentRoute: typeof publicRoute
    }
    '/(app)/dashboard/settings': {
      id: '/(app)/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof appDashboardSettingsImport
      parentRoute: typeof appDashboardImport
    }
    '/(app)/dashboard/todos': {
      id: '/(app)/dashboard/todos'
      path: '/todos'
      fullPath: '/dashboard/todos'
      preLoaderRoute: typeof appDashboardTodosImport
      parentRoute: typeof appDashboardImport
    }
    '/(public)/_public/docs': {
      id: '/(public)/_public/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof publicPublicDocsImport
      parentRoute: typeof publicPublicImport
    }
    '/(public)/_public/features': {
      id: '/(public)/_public/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof publicPublicFeaturesImport
      parentRoute: typeof publicPublicImport
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof appDashboardIndexImport
      parentRoute: typeof appDashboardImport
    }
    '/(public)/_public/': {
      id: '/(public)/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicPublicIndexImport
      parentRoute: typeof publicPublicImport
    }
    '/(app)/dashboard/settings/change-password': {
      id: '/(app)/dashboard/settings/change-password'
      path: '/change-password'
      fullPath: '/dashboard/settings/change-password'
      preLoaderRoute: typeof appDashboardSettingsChangePasswordImport
      parentRoute: typeof appDashboardSettingsImport
    }
    '/(app)/dashboard/settings/user-profile': {
      id: '/(app)/dashboard/settings/user-profile'
      path: '/user-profile'
      fullPath: '/dashboard/settings/user-profile'
      preLoaderRoute: typeof appDashboardSettingsUserProfileImport
      parentRoute: typeof appDashboardSettingsImport
    }
    '/(app)/dashboard/todos/new': {
      id: '/(app)/dashboard/todos/new'
      path: '/new'
      fullPath: '/dashboard/todos/new'
      preLoaderRoute: typeof appDashboardTodosNewImport
      parentRoute: typeof appDashboardTodosImport
    }
    '/(app)/dashboard/settings/': {
      id: '/(app)/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof appDashboardSettingsIndexImport
      parentRoute: typeof appDashboardSettingsImport
    }
    '/(app)/dashboard/todos/': {
      id: '/(app)/dashboard/todos/'
      path: '/'
      fullPath: '/dashboard/todos/'
      preLoaderRoute: typeof appDashboardTodosIndexImport
      parentRoute: typeof appDashboardTodosImport
    }
    '/(app)/dashboard/todos/detail/$id': {
      id: '/(app)/dashboard/todos/detail/$id'
      path: '/detail/$id'
      fullPath: '/dashboard/todos/detail/$id'
      preLoaderRoute: typeof appDashboardTodosDetailIdImport
      parentRoute: typeof appDashboardTodosImport
    }
    '/(app)/dashboard/todos/edit/$id': {
      id: '/(app)/dashboard/todos/edit/$id'
      path: '/edit/$id'
      fullPath: '/dashboard/todos/edit/$id'
      preLoaderRoute: typeof appDashboardTodosEditIdImport
      parentRoute: typeof appDashboardTodosImport
    }
  }
}

// Create and export the route tree

interface appDashboardSettingsRouteChildren {
  appDashboardSettingsChangePasswordRoute: typeof appDashboardSettingsChangePasswordRoute
  appDashboardSettingsUserProfileRoute: typeof appDashboardSettingsUserProfileRoute
  appDashboardSettingsIndexRoute: typeof appDashboardSettingsIndexRoute
}

const appDashboardSettingsRouteChildren: appDashboardSettingsRouteChildren = {
  appDashboardSettingsChangePasswordRoute:
    appDashboardSettingsChangePasswordRoute,
  appDashboardSettingsUserProfileRoute: appDashboardSettingsUserProfileRoute,
  appDashboardSettingsIndexRoute: appDashboardSettingsIndexRoute,
}

const appDashboardSettingsRouteWithChildren =
  appDashboardSettingsRoute._addFileChildren(appDashboardSettingsRouteChildren)

interface appDashboardTodosRouteChildren {
  appDashboardTodosNewRoute: typeof appDashboardTodosNewRoute
  appDashboardTodosIndexRoute: typeof appDashboardTodosIndexRoute
  appDashboardTodosDetailIdRoute: typeof appDashboardTodosDetailIdRoute
  appDashboardTodosEditIdRoute: typeof appDashboardTodosEditIdRoute
}

const appDashboardTodosRouteChildren: appDashboardTodosRouteChildren = {
  appDashboardTodosNewRoute: appDashboardTodosNewRoute,
  appDashboardTodosIndexRoute: appDashboardTodosIndexRoute,
  appDashboardTodosDetailIdRoute: appDashboardTodosDetailIdRoute,
  appDashboardTodosEditIdRoute: appDashboardTodosEditIdRoute,
}

const appDashboardTodosRouteWithChildren =
  appDashboardTodosRoute._addFileChildren(appDashboardTodosRouteChildren)

interface appDashboardRouteChildren {
  appDashboardSettingsRoute: typeof appDashboardSettingsRouteWithChildren
  appDashboardTodosRoute: typeof appDashboardTodosRouteWithChildren
  appDashboardIndexRoute: typeof appDashboardIndexRoute
}

const appDashboardRouteChildren: appDashboardRouteChildren = {
  appDashboardSettingsRoute: appDashboardSettingsRouteWithChildren,
  appDashboardTodosRoute: appDashboardTodosRouteWithChildren,
  appDashboardIndexRoute: appDashboardIndexRoute,
}

const appDashboardRouteWithChildren = appDashboardRoute._addFileChildren(
  appDashboardRouteChildren,
)

interface publicPublicRouteChildren {
  publicPublicDocsRoute: typeof publicPublicDocsRoute
  publicPublicFeaturesRoute: typeof publicPublicFeaturesRoute
  publicPublicIndexRoute: typeof publicPublicIndexRoute
}

const publicPublicRouteChildren: publicPublicRouteChildren = {
  publicPublicDocsRoute: publicPublicDocsRoute,
  publicPublicFeaturesRoute: publicPublicFeaturesRoute,
  publicPublicIndexRoute: publicPublicIndexRoute,
}

const publicPublicRouteWithChildren = publicPublicRoute._addFileChildren(
  publicPublicRouteChildren,
)

interface publicRouteChildren {
  publicPublicRoute: typeof publicPublicRouteWithChildren
}

const publicRouteChildren: publicRouteChildren = {
  publicPublicRoute: publicPublicRouteWithChildren,
}

const publicRouteWithChildren =
  publicRoute._addFileChildren(publicRouteChildren)

export interface FileRoutesByFullPath {
  '/dashboard': typeof appDashboardRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/': typeof publicPublicIndexRoute
  '/dashboard/settings': typeof appDashboardSettingsRouteWithChildren
  '/dashboard/todos': typeof appDashboardTodosRouteWithChildren
  '/docs': typeof publicPublicDocsRoute
  '/features': typeof publicPublicFeaturesRoute
  '/dashboard/': typeof appDashboardIndexRoute
  '/dashboard/settings/change-password': typeof appDashboardSettingsChangePasswordRoute
  '/dashboard/settings/user-profile': typeof appDashboardSettingsUserProfileRoute
  '/dashboard/todos/new': typeof appDashboardTodosNewRoute
  '/dashboard/settings/': typeof appDashboardSettingsIndexRoute
  '/dashboard/todos/': typeof appDashboardTodosIndexRoute
  '/dashboard/todos/detail/$id': typeof appDashboardTodosDetailIdRoute
  '/dashboard/todos/edit/$id': typeof appDashboardTodosEditIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/docs': typeof publicPublicDocsRoute
  '/features': typeof publicPublicFeaturesRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/': typeof publicPublicIndexRoute
  '/dashboard/settings/change-password': typeof appDashboardSettingsChangePasswordRoute
  '/dashboard/settings/user-profile': typeof appDashboardSettingsUserProfileRoute
  '/dashboard/todos/new': typeof appDashboardTodosNewRoute
  '/dashboard/settings': typeof appDashboardSettingsIndexRoute
  '/dashboard/todos': typeof appDashboardTodosIndexRoute
  '/dashboard/todos/detail/$id': typeof appDashboardTodosDetailIdRoute
  '/dashboard/todos/edit/$id': typeof appDashboardTodosEditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)/dashboard': typeof appDashboardRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(public)': typeof publicRouteWithChildren
  '/(public)/_public': typeof publicPublicRouteWithChildren
  '/(app)/dashboard/settings': typeof appDashboardSettingsRouteWithChildren
  '/(app)/dashboard/todos': typeof appDashboardTodosRouteWithChildren
  '/(public)/_public/docs': typeof publicPublicDocsRoute
  '/(public)/_public/features': typeof publicPublicFeaturesRoute
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(public)/_public/': typeof publicPublicIndexRoute
  '/(app)/dashboard/settings/change-password': typeof appDashboardSettingsChangePasswordRoute
  '/(app)/dashboard/settings/user-profile': typeof appDashboardSettingsUserProfileRoute
  '/(app)/dashboard/todos/new': typeof appDashboardTodosNewRoute
  '/(app)/dashboard/settings/': typeof appDashboardSettingsIndexRoute
  '/(app)/dashboard/todos/': typeof appDashboardTodosIndexRoute
  '/(app)/dashboard/todos/detail/$id': typeof appDashboardTodosDetailIdRoute
  '/(app)/dashboard/todos/edit/$id': typeof appDashboardTodosEditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/login'
    | '/register'
    | '/'
    | '/dashboard/settings'
    | '/dashboard/todos'
    | '/docs'
    | '/features'
    | '/dashboard/'
    | '/dashboard/settings/change-password'
    | '/dashboard/settings/user-profile'
    | '/dashboard/todos/new'
    | '/dashboard/settings/'
    | '/dashboard/todos/'
    | '/dashboard/todos/detail/$id'
    | '/dashboard/todos/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/docs'
    | '/features'
    | '/dashboard'
    | '/'
    | '/dashboard/settings/change-password'
    | '/dashboard/settings/user-profile'
    | '/dashboard/todos/new'
    | '/dashboard/settings'
    | '/dashboard/todos'
    | '/dashboard/todos/detail/$id'
    | '/dashboard/todos/edit/$id'
  id:
    | '__root__'
    | '/(app)/dashboard'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(public)'
    | '/(public)/_public'
    | '/(app)/dashboard/settings'
    | '/(app)/dashboard/todos'
    | '/(public)/_public/docs'
    | '/(public)/_public/features'
    | '/(app)/dashboard/'
    | '/(public)/_public/'
    | '/(app)/dashboard/settings/change-password'
    | '/(app)/dashboard/settings/user-profile'
    | '/(app)/dashboard/todos/new'
    | '/(app)/dashboard/settings/'
    | '/(app)/dashboard/todos/'
    | '/(app)/dashboard/todos/detail/$id'
    | '/(app)/dashboard/todos/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appDashboardRoute: typeof appDashboardRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  publicRoute: typeof publicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appDashboardRoute: appDashboardRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  publicRoute: publicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)/dashboard",
        "/(auth)/login",
        "/(auth)/register",
        "/(public)"
      ]
    },
    "/(app)/dashboard": {
      "filePath": "(app)/dashboard.tsx",
      "children": [
        "/(app)/dashboard/settings",
        "/(app)/dashboard/todos",
        "/(app)/dashboard/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/(public)": {
      "filePath": "(public)",
      "children": [
        "/(public)/_public"
      ]
    },
    "/(public)/_public": {
      "filePath": "(public)/_public.tsx",
      "parent": "/(public)",
      "children": [
        "/(public)/_public/docs",
        "/(public)/_public/features",
        "/(public)/_public/"
      ]
    },
    "/(app)/dashboard/settings": {
      "filePath": "(app)/dashboard/settings.tsx",
      "parent": "/(app)/dashboard",
      "children": [
        "/(app)/dashboard/settings/change-password",
        "/(app)/dashboard/settings/user-profile",
        "/(app)/dashboard/settings/"
      ]
    },
    "/(app)/dashboard/todos": {
      "filePath": "(app)/dashboard/todos.tsx",
      "parent": "/(app)/dashboard",
      "children": [
        "/(app)/dashboard/todos/new",
        "/(app)/dashboard/todos/",
        "/(app)/dashboard/todos/detail/$id",
        "/(app)/dashboard/todos/edit/$id"
      ]
    },
    "/(public)/_public/docs": {
      "filePath": "(public)/_public/docs.tsx",
      "parent": "/(public)/_public"
    },
    "/(public)/_public/features": {
      "filePath": "(public)/_public/features.tsx",
      "parent": "/(public)/_public"
    },
    "/(app)/dashboard/": {
      "filePath": "(app)/dashboard/index.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(public)/_public/": {
      "filePath": "(public)/_public/index.tsx",
      "parent": "/(public)/_public"
    },
    "/(app)/dashboard/settings/change-password": {
      "filePath": "(app)/dashboard/settings/change-password.tsx",
      "parent": "/(app)/dashboard/settings"
    },
    "/(app)/dashboard/settings/user-profile": {
      "filePath": "(app)/dashboard/settings/user-profile.tsx",
      "parent": "/(app)/dashboard/settings"
    },
    "/(app)/dashboard/todos/new": {
      "filePath": "(app)/dashboard/todos/new.tsx",
      "parent": "/(app)/dashboard/todos"
    },
    "/(app)/dashboard/settings/": {
      "filePath": "(app)/dashboard/settings/index.tsx",
      "parent": "/(app)/dashboard/settings"
    },
    "/(app)/dashboard/todos/": {
      "filePath": "(app)/dashboard/todos/index.tsx",
      "parent": "/(app)/dashboard/todos"
    },
    "/(app)/dashboard/todos/detail/$id": {
      "filePath": "(app)/dashboard/todos/detail/$id.tsx",
      "parent": "/(app)/dashboard/todos"
    },
    "/(app)/dashboard/todos/edit/$id": {
      "filePath": "(app)/dashboard/todos/edit/$id.tsx",
      "parent": "/(app)/dashboard/todos"
    }
  }
}
ROUTE_MANIFEST_END */
